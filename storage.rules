rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the file
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if email is verified
    function isEmailVerified() {
      return isAuthenticated() && request.auth.token.email_verified == true;
    }
    
    // Helper function to validate image files
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') 
        && request.resource.size < 5 * 1024 * 1024; // 5MB max
    }
    
    // Profile images - only owner can read/write their own
    match /users/{userId}/profile.jpg {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Profile signatures - only owner can read/write their own
    match /users/{userId}/signature.png {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow any other files in user's directory (for future expansion)
    match /users/{userId}/{fileName} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Legacy paths for backward compatibility (if needed)
    match /Profile/{userId}/ProfileImage/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) 
        && isEmailVerified() 
        && isValidImage();
    }
    
    match /Profile/{userId}/Signature/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) 
        && isEmailVerified() 
        && isValidImage();
    }
    
    // Site images
    match /Sites/{siteId}/{fileName} {
      // For now, authenticated users can read site images
      // This will need refinement based on sharing rules
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() 
        && isEmailVerified() 
        && isValidImage();
    }
    
    // Snag images
    match /Snags/{snagId}/{fileName} {
      // For now, authenticated users can read snag images
      // This will need refinement based on sharing rules
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() 
        && isEmailVerified() 
        && isValidImage();
    }
    
    // Block all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
