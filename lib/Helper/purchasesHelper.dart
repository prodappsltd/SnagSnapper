import 'dart:io';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/foundation.dart';import 'package:purchases_flutter/purchases_flutter.dart';class PurchasesHelper {  static const String iOSMonthlySubID = 'MonthlySub';  static const String iOSYearlySubID = 'YearlySub';  static const String iOSMonthlySubWithSSID = 'SSMonthlyWithSiteSharing';  static const String iOSYearlySubWithSSID = 'SSYearlyWithSiteSharing';  static const String AndMonthlySubID = 'ssmoothly:ssmonthly';  static const String AndYearlySubID = 'ssyearly:ssyearly';  static const String AndMonthlySubWithSSID = 'monthlywithsitesharing:mwithwss';  static const String AndYearlySubWithSSID = 'yearlywithsitesharing:ywss';  static getOfferings() async {    return await Purchases.getOfferings();  }  static getCurrentSubscriptionID() async {    // Get the type    CustomerInfo info = await Purchases.getCustomerInfo();    if (kDebugMode) print("*************");    if (kDebugMode) info.entitlements.active.entries.forEach((element) => print(element));    // Get the price string  }  static Future<bool> isSiteSharingEnabled() async {    CustomerInfo info = await Purchases.getCustomerInfo();    if (kDebugMode) print ('::::::::::::::::::::::::');    if (kDebugMode) print (info.activeSubscriptions);    return Platform.isIOS    ? info.activeSubscriptions.contains(iOSMonthlySubWithSSID) || info.activeSubscriptions.contains(iOSYearlySubWithSSID)    : info.activeSubscriptions.contains(AndMonthlySubWithSSID) || info.activeSubscriptions.contains(AndYearlySubWithSSID);  }  static isUserPro() async {    CustomerInfo info = await Purchases.getCustomerInfo();    if (kDebugMode) print ('::::::::::::::::::::::::');    if (kDebugMode) print (info.activeSubscriptions);    return Platform.isIOS    ? info.activeSubscriptions.contains(iOSMonthlySubWithSSID) || info.activeSubscriptions.contains(iOSYearlySubWithSSID)|| info.activeSubscriptions.contains(iOSMonthlySubID) || info.activeSubscriptions.contains(iOSYearlySubID)    : info.activeSubscriptions.contains(AndMonthlySubWithSSID) || info.activeSubscriptions.contains(AndYearlySubWithSSID)|| info.activeSubscriptions.contains(AndMonthlySubID) || info.activeSubscriptions.contains(AndYearlySubID);  }  static configurePurchases() async {    late PurchasesConfiguration configuration;    configuration = PurchasesConfiguration(Platform.isAndroid? "goog_dBsMJadviqHUGQQucvZqfnTESkM" : "appl_vUQRJQGysGzHmmMCKjHeviBxCOH")      ..appUserID = FirebaseAuth.instance.currentUser!.uid;// New One Sorted    await Purchases.configure(configuration);  }  static purchaseGivenPackage(Package p) async {    await Purchases.purchasePackage(p);  }}