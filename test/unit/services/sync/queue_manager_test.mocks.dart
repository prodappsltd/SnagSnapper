// Mocks generated by Mockito 5.4.6 from annotations
// in snagsnapper/test/unit/services/sync/queue_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:cloud_firestore/cloud_firestore.dart' as _i9;
import 'package:connectivity_plus/connectivity_plus.dart' as _i12;
import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i7;
import 'package:firebase_storage/firebase_storage.dart' as _i10;
import 'package:http/http.dart' as _i14;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:shared_preferences/shared_preferences.dart' as _i13;
import 'package:snagsnapper/Data/database/app_database.dart' as _i3;
import 'package:snagsnapper/Data/database/daos/profile_dao.dart' as _i4;
import 'package:snagsnapper/Data/database/daos/site_dao.dart' as _i6;
import 'package:snagsnapper/Data/database/daos/sync_queue_dao.dart' as _i5;
import 'package:snagsnapper/Data/models/app_user.dart' as _i20;
import 'package:snagsnapper/Data/models/sync_queue_item.dart' as _i17;
import 'package:snagsnapper/Data/models/sync_status.dart' as _i18;
import 'package:snagsnapper/services/image_storage_service.dart' as _i11;
import 'package:snagsnapper/services/sync/handlers/profile_sync_handler.dart'
    as _i19;
import 'package:snagsnapper/services/sync/network_monitor.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMigrationStrategy_0 extends _i1.SmartFake
    implements _i2.MigrationStrategy {
  _FakeMigrationStrategy_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$ProfilesTable_1 extends _i1.SmartFake
    implements _i3.$ProfilesTable {
  _Fake$ProfilesTable_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SyncQueueTableTable_2 extends _i1.SmartFake
    implements _i3.$SyncQueueTableTable {
  _Fake$SyncQueueTableTable_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SitesTable_3 extends _i1.SmartFake implements _i3.$SitesTable {
  _Fake$SitesTable_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProfileDao_4 extends _i1.SmartFake implements _i4.ProfileDao {
  _FakeProfileDao_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSyncQueueDao_5 extends _i1.SmartFake implements _i5.SyncQueueDao {
  _FakeSyncQueueDao_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSiteDao_6 extends _i1.SmartFake implements _i6.SiteDao {
  _FakeSiteDao_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppDatabaseManager_7 extends _i1.SmartFake
    implements _i3.$AppDatabaseManager {
  _Fake$AppDatabaseManager_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeneratedDatabase_8 extends _i1.SmartFake
    implements _i2.GeneratedDatabase {
  _FakeGeneratedDatabase_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDriftDatabaseOptions_9 extends _i1.SmartFake
    implements _i2.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryUpdateRules_10 extends _i1.SmartFake
    implements _i2.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnection_11 extends _i1.SmartFake
    implements _i2.DatabaseConnection {
  _FakeDatabaseConnection_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryExecutor_12 extends _i1.SmartFake implements _i2.QueryExecutor {
  _FakeQueryExecutor_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryStore_13 extends _i1.SmartFake
    implements _i7.StreamQueryStore {
  _FakeStreamQueryStore_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnectionUser_14 extends _i1.SmartFake
    implements _i2.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_15<T1> extends _i1.SmartFake implements _i8.Future<T1> {
  _FakeFuture_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrator_16 extends _i1.SmartFake implements _i2.Migrator {
  _FakeMigrator_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInsertStatement_17<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.InsertStatement<T1, D1> {
  _FakeInsertStatement_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpdateStatement_18<T extends _i2.Table, D> extends _i1.SmartFake
    implements _i2.UpdateStatement<T, D> {
  _FakeUpdateStatement_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSimpleSelectStatement_19<T1 extends _i2.HasResultSet, D>
    extends _i1.SmartFake
    implements _i2.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJoinedSelectStatement_20<FirstT extends _i2.HasResultSet, FirstD>
    extends _i1.SmartFake
    implements _i2.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseSelectStatement_21<Row> extends _i1.SmartFake
    implements _i2.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDeleteStatement_22<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSelectable_23<T> extends _i1.SmartFake implements _i2.Selectable<T> {
  _FakeSelectable_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGenerationContext_24 extends _i1.SmartFake
    implements _i2.GenerationContext {
  _FakeGenerationContext_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppDatabase_25 extends _i1.SmartFake implements _i3.AppDatabase {
  _FakeAppDatabase_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseFirestore_26 extends _i1.SmartFake
    implements _i9.FirebaseFirestore {
  _FakeFirebaseFirestore_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseStorage_27 extends _i1.SmartFake
    implements _i10.FirebaseStorage {
  _FakeFirebaseStorage_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeImageStorageService_28 extends _i1.SmartFake
    implements _i11.ImageStorageService {
  _FakeImageStorageService_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConnectivity_29 extends _i1.SmartFake implements _i12.Connectivity {
  _FakeConnectivity_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSharedPreferences_30 extends _i1.SmartFake
    implements _i13.SharedPreferences {
  _FakeSharedPreferences_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeClient_31 extends _i1.SmartFake implements _i14.Client {
  _FakeClient_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePingResult_32 extends _i1.SmartFake implements _i15.PingResult {
  _FakePingResult_32(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i3.AppDatabase {
  MockAppDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion =>
      (super.noSuchMethod(Invocation.getter(#schemaVersion), returnValue: 0)
          as int);

  @override
  _i2.MigrationStrategy get migration =>
      (super.noSuchMethod(
            Invocation.getter(#migration),
            returnValue: _FakeMigrationStrategy_0(
              this,
              Invocation.getter(#migration),
            ),
          )
          as _i2.MigrationStrategy);

  @override
  bool get isOpen =>
      (super.noSuchMethod(Invocation.getter(#isOpen), returnValue: false)
          as bool);

  @override
  _i8.Future<String> get databasePath =>
      (super.noSuchMethod(
            Invocation.getter(#databasePath),
            returnValue: _i8.Future<String>.value(
              _i16.dummyValue<String>(this, Invocation.getter(#databasePath)),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<int> get databaseSize =>
      (super.noSuchMethod(
            Invocation.getter(#databaseSize),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i3.$ProfilesTable get profiles =>
      (super.noSuchMethod(
            Invocation.getter(#profiles),
            returnValue: _Fake$ProfilesTable_1(
              this,
              Invocation.getter(#profiles),
            ),
          )
          as _i3.$ProfilesTable);

  @override
  _i3.$SyncQueueTableTable get syncQueueTable =>
      (super.noSuchMethod(
            Invocation.getter(#syncQueueTable),
            returnValue: _Fake$SyncQueueTableTable_2(
              this,
              Invocation.getter(#syncQueueTable),
            ),
          )
          as _i3.$SyncQueueTableTable);

  @override
  _i3.$SitesTable get sites =>
      (super.noSuchMethod(
            Invocation.getter(#sites),
            returnValue: _Fake$SitesTable_3(this, Invocation.getter(#sites)),
          )
          as _i3.$SitesTable);

  @override
  _i4.ProfileDao get profileDao =>
      (super.noSuchMethod(
            Invocation.getter(#profileDao),
            returnValue: _FakeProfileDao_4(
              this,
              Invocation.getter(#profileDao),
            ),
          )
          as _i4.ProfileDao);

  @override
  _i5.SyncQueueDao get syncQueueDao =>
      (super.noSuchMethod(
            Invocation.getter(#syncQueueDao),
            returnValue: _FakeSyncQueueDao_5(
              this,
              Invocation.getter(#syncQueueDao),
            ),
          )
          as _i5.SyncQueueDao);

  @override
  _i6.SiteDao get siteDao =>
      (super.noSuchMethod(
            Invocation.getter(#siteDao),
            returnValue: _FakeSiteDao_6(this, Invocation.getter(#siteDao)),
          )
          as _i6.SiteDao);

  @override
  _i3.$AppDatabaseManager get managers =>
      (super.noSuchMethod(
            Invocation.getter(#managers),
            returnValue: _Fake$AppDatabaseManager_7(
              this,
              Invocation.getter(#managers),
            ),
          )
          as _i3.$AppDatabaseManager);

  @override
  Iterable<_i2.TableInfo<_i2.Table, Object?>> get allTables =>
      (super.noSuchMethod(
            Invocation.getter(#allTables),
            returnValue: <_i2.TableInfo<_i2.Table, Object?>>[],
          )
          as Iterable<_i2.TableInfo<_i2.Table, Object?>>);

  @override
  List<_i2.DatabaseSchemaEntity> get allSchemaEntities =>
      (super.noSuchMethod(
            Invocation.getter(#allSchemaEntities),
            returnValue: <_i2.DatabaseSchemaEntity>[],
          )
          as List<_i2.DatabaseSchemaEntity>);

  @override
  _i2.GeneratedDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeGeneratedDatabase_8(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i2.GeneratedDatabase);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_9(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.StreamQueryUpdateRules get streamUpdateRules =>
      (super.noSuchMethod(
            Invocation.getter(#streamUpdateRules),
            returnValue: _FakeStreamQueryUpdateRules_10(
              this,
              Invocation.getter(#streamUpdateRules),
            ),
          )
          as _i2.StreamQueryUpdateRules);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_11(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i16.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_12(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i7.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_13(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i7.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_14(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i8.Future<void> closeDatabase() =>
      (super.noSuchMethod(
            Invocation.method(#closeDatabase, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<bool> createBackup(String? backupPath) =>
      (super.noSuchMethod(
            Invocation.method(#createBackup, [backupPath]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<T> inTransaction<T>(_i8.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#inTransaction, [action]),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#inTransaction, [action]),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(
                  this,
                  Invocation.method(#inTransaction, [action]),
                ),
          )
          as _i8.Future<T>);

  @override
  _i8.Future<void> clearAllData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllData, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getTableInfo(String? tableName) =>
      (super.noSuchMethod(
            Invocation.method(#getTableInfo, [tableName]),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<bool> profileExists(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#profileExists, [userId]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<List<_i3.ProfileEntry>> getProfilesNeedingSync() =>
      (super.noSuchMethod(
            Invocation.method(#getProfilesNeedingSync, []),
            returnValue: _i8.Future<List<_i3.ProfileEntry>>.value(
              <_i3.ProfileEntry>[],
            ),
          )
          as _i8.Future<List<_i3.ProfileEntry>>);

  @override
  _i2.Migrator createMigrator() =>
      (super.noSuchMethod(
            Invocation.method(#createMigrator, []),
            returnValue: _FakeMigrator_16(
              this,
              Invocation.method(#createMigrator, []),
            ),
          )
          as _i2.Migrator);

  @override
  _i8.Future<void> beforeOpen(
    _i2.QueryExecutor? executor,
    _i2.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#beforeOpen, [executor, details]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Stream<T> createStream<T extends Object>(
    _i7.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i8.Stream<T>.empty(),
          )
          as _i8.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i16.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i8.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i8.Stream<Set<_i2.TableUpdate>>);

  @override
  _i8.Future<T> doWhenOpened<T>(
    _i8.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i8.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_17<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_18<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_19<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_20<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_21<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_22<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i8.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i8.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
          )
          as _i8.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_23<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_23<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i8.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<T> transaction<T>(
    _i8.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i8.Future<T>);

  @override
  _i8.Future<T> exclusively<T>(_i8.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i8.Future<T>);

  @override
  _i8.Future<void> batch(_i8.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<T> runWithInterceptor<T>(
    _i8.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i8.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_24(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_24(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i16.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);
}

/// A class which mocks [SyncQueueDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSyncQueueDao extends _i1.Mock implements _i5.SyncQueueDao {
  MockSyncQueueDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeAppDatabase_25(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i3.AppDatabase);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_11(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i16.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_9(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_12(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i7.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_13(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i7.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_14(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i3.$SyncQueueTableTable get syncQueueTable =>
      (super.noSuchMethod(
            Invocation.getter(#syncQueueTable),
            returnValue: _Fake$SyncQueueTableTable_2(
              this,
              Invocation.getter(#syncQueueTable),
            ),
          )
          as _i3.$SyncQueueTableTable);

  @override
  _i8.Future<int> insertItem(_i17.SyncQueueItem? item) =>
      (super.noSuchMethod(
            Invocation.method(#insertItem, [item]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<_i17.SyncQueueItem?> getItemById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getItemById, [id]),
            returnValue: _i8.Future<_i17.SyncQueueItem?>.value(),
          )
          as _i8.Future<_i17.SyncQueueItem?>);

  @override
  _i8.Future<List<_i17.SyncQueueItem>> getPendingItems() =>
      (super.noSuchMethod(
            Invocation.method(#getPendingItems, []),
            returnValue: _i8.Future<List<_i17.SyncQueueItem>>.value(
              <_i17.SyncQueueItem>[],
            ),
          )
          as _i8.Future<List<_i17.SyncQueueItem>>);

  @override
  _i8.Future<List<_i17.SyncQueueItem>> getPendingItemsByPriority() =>
      (super.noSuchMethod(
            Invocation.method(#getPendingItemsByPriority, []),
            returnValue: _i8.Future<List<_i17.SyncQueueItem>>.value(
              <_i17.SyncQueueItem>[],
            ),
          )
          as _i8.Future<List<_i17.SyncQueueItem>>);

  @override
  _i8.Future<List<_i17.SyncQueueItem>> getFailedItems() =>
      (super.noSuchMethod(
            Invocation.method(#getFailedItems, []),
            returnValue: _i8.Future<List<_i17.SyncQueueItem>>.value(
              <_i17.SyncQueueItem>[],
            ),
          )
          as _i8.Future<List<_i17.SyncQueueItem>>);

  @override
  _i8.Future<List<_i17.SyncQueueItem>> getAllItems() =>
      (super.noSuchMethod(
            Invocation.method(#getAllItems, []),
            returnValue: _i8.Future<List<_i17.SyncQueueItem>>.value(
              <_i17.SyncQueueItem>[],
            ),
          )
          as _i8.Future<List<_i17.SyncQueueItem>>);

  @override
  _i8.Future<bool> deleteItem(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteItem, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> deleteItems(List<String>? ids) =>
      (super.noSuchMethod(
            Invocation.method(#deleteItems, [ids]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> clearQueueForUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#clearQueueForUser, [userId]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> updateItemStatus(String? id, _i18.SyncStatus? status) =>
      (super.noSuchMethod(
            Invocation.method(#updateItemStatus, [id, status]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> updateItemRetry(
    String? id,
    int? retryCount,
    DateTime? nextRetryAt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateItemRetry, [id, retryCount, nextRetryAt]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> updateItemPriority(
    String? id,
    _i17.SyncPriority? priority,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateItemPriority, [id, priority]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Stream<T> createStream<T extends Object>(
    _i7.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i8.Stream<T>.empty(),
          )
          as _i8.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i16.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i8.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i8.Stream<Set<_i2.TableUpdate>>);

  @override
  _i8.Future<T> doWhenOpened<T>(
    _i8.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i8.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_17<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_18<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_19<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_20<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_21<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_22<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i8.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i8.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
          )
          as _i8.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_23<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_23<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i8.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<T> transaction<T>(
    _i8.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i8.Future<T>);

  @override
  _i8.Future<T> exclusively<T>(_i8.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i8.Future<T>);

  @override
  _i8.Future<void> batch(_i8.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<T> runWithInterceptor<T>(
    _i8.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i8.Future<T>.value(v),
                ) ??
                _FakeFuture_15<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i8.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_24(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_24(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i16.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);

  @override
  _i8.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);
}

/// A class which mocks [ProfileSyncHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileSyncHandler extends _i1.Mock
    implements _i19.ProfileSyncHandler {
  MockProfileSyncHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppDatabase get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _FakeAppDatabase_25(
              this,
              Invocation.getter(#database),
            ),
          )
          as _i3.AppDatabase);

  @override
  _i9.FirebaseFirestore get firestore =>
      (super.noSuchMethod(
            Invocation.getter(#firestore),
            returnValue: _FakeFirebaseFirestore_26(
              this,
              Invocation.getter(#firestore),
            ),
          )
          as _i9.FirebaseFirestore);

  @override
  _i10.FirebaseStorage get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeFirebaseStorage_27(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i10.FirebaseStorage);

  @override
  _i11.ImageStorageService get imageStorage =>
      (super.noSuchMethod(
            Invocation.getter(#imageStorage),
            returnValue: _FakeImageStorageService_28(
              this,
              Invocation.getter(#imageStorage),
            ),
          )
          as _i11.ImageStorageService);

  @override
  _i8.Future<bool> syncProfileData(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#syncProfileData, [userId]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i20.AppUser?> downloadProfile(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#downloadProfile, [userId]),
            returnValue: _i8.Future<_i20.AppUser?>.value(),
          )
          as _i8.Future<_i20.AppUser?>);

  @override
  _i8.Future<bool> syncProfileImage(String? userId, String? imagePath) =>
      (super.noSuchMethod(
            Invocation.method(#syncProfileImage, [userId, imagePath]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> syncSignatureImage(String? userId, String? signaturePath) =>
      (super.noSuchMethod(
            Invocation.method(#syncSignatureImage, [userId, signaturePath]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<void> markForSync(String? userId, List<_i19.SyncFlag>? flags) =>
      (super.noSuchMethod(
            Invocation.method(#markForSync, [userId, flags]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> handleConflict(
    String? userId,
    _i20.AppUser? localUser,
    Map<String, dynamic>? remoteData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#handleConflict, [userId, localUser, remoteData]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<bool> downloadProfileImage(String? userId, String? firebasePath) =>
      (super.noSuchMethod(
            Invocation.method(#downloadProfileImage, [userId, firebasePath]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> downloadSignatureImage(
    String? userId,
    String? firebasePath,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#downloadSignatureImage, [userId, firebasePath]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<void> syncAll(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#syncAll, [userId]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<bool> syncBatch(List<_i17.SyncQueueItem>? items) =>
      (super.noSuchMethod(
            Invocation.method(#syncBatch, [items]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);
}

/// A class which mocks [NetworkMonitor].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkMonitor extends _i1.Mock implements _i15.NetworkMonitor {
  MockNetworkMonitor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Connectivity get connectivity =>
      (super.noSuchMethod(
            Invocation.getter(#connectivity),
            returnValue: _FakeConnectivity_29(
              this,
              Invocation.getter(#connectivity),
            ),
          )
          as _i12.Connectivity);

  @override
  _i13.SharedPreferences get prefs =>
      (super.noSuchMethod(
            Invocation.getter(#prefs),
            returnValue: _FakeSharedPreferences_30(
              this,
              Invocation.getter(#prefs),
            ),
          )
          as _i13.SharedPreferences);

  @override
  _i14.Client get httpClient =>
      (super.noSuchMethod(
            Invocation.getter(#httpClient),
            returnValue: _FakeClient_31(this, Invocation.getter(#httpClient)),
          )
          as _i14.Client);

  @override
  _i8.Stream<_i12.ConnectivityResult> get connectivityStream =>
      (super.noSuchMethod(
            Invocation.getter(#connectivityStream),
            returnValue: _i8.Stream<_i12.ConnectivityResult>.empty(),
          )
          as _i8.Stream<_i12.ConnectivityResult>);

  @override
  _i8.Stream<_i12.ConnectivityResult> get debouncedConnectivityStream =>
      (super.noSuchMethod(
            Invocation.getter(#debouncedConnectivityStream),
            returnValue: _i8.Stream<_i12.ConnectivityResult>.empty(),
          )
          as _i8.Stream<_i12.ConnectivityResult>);

  @override
  _i8.Future<bool> isOnline() =>
      (super.noSuchMethod(
            Invocation.method(#isOnline, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i15.ConnectionType> getConnectionType() =>
      (super.noSuchMethod(
            Invocation.method(#getConnectionType, []),
            returnValue: _i8.Future<_i15.ConnectionType>.value(
              _i15.ConnectionType.none,
            ),
          )
          as _i8.Future<_i15.ConnectionType>);

  @override
  _i8.Future<bool> hasGoodConnection() =>
      (super.noSuchMethod(
            Invocation.method(#hasGoodConnection, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i15.PingResult> pingTest() =>
      (super.noSuchMethod(
            Invocation.method(#pingTest, []),
            returnValue: _i8.Future<_i15.PingResult>.value(
              _FakePingResult_32(this, Invocation.method(#pingTest, [])),
            ),
          )
          as _i8.Future<_i15.PingResult>);

  @override
  _i8.Future<double?> estimateBandwidth() =>
      (super.noSuchMethod(
            Invocation.method(#estimateBandwidth, []),
            returnValue: _i8.Future<double?>.value(),
          )
          as _i8.Future<double?>);

  @override
  _i8.Future<int> measureLatency() =>
      (super.noSuchMethod(
            Invocation.method(#measureLatency, []),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<_i15.ConnectionQuality> getConnectionQuality() =>
      (super.noSuchMethod(
            Invocation.method(#getConnectionQuality, []),
            returnValue: _i8.Future<_i15.ConnectionQuality>.value(
              _i15.ConnectionQuality.none,
            ),
          )
          as _i8.Future<_i15.ConnectionQuality>);

  @override
  void setupAutoSync(Function? syncCallback) => super.noSuchMethod(
    Invocation.method(#setupAutoSync, [syncCallback]),
    returnValueForMissingStub: null,
  );

  @override
  void onQueueProcess(Function? queueCallback) => super.noSuchMethod(
    Invocation.method(#onQueueProcess, [queueCallback]),
    returnValueForMissingStub: null,
  );

  @override
  void setSyncInProgress(bool? inProgress) => super.noSuchMethod(
    Invocation.method(#setSyncInProgress, [inProgress]),
    returnValueForMissingStub: null,
  );

  @override
  void setQueueEmpty(bool? empty) => super.noSuchMethod(
    Invocation.method(#setQueueEmpty, [empty]),
    returnValueForMissingStub: null,
  );

  @override
  void pauseAutoSync() => super.noSuchMethod(
    Invocation.method(#pauseAutoSync, []),
    returnValueForMissingStub: null,
  );

  @override
  void resumeAutoSync() => super.noSuchMethod(
    Invocation.method(#resumeAutoSync, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<bool> shouldAutoSync() =>
      (super.noSuchMethod(
            Invocation.method(#shouldAutoSync, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<void> simulateConnectivityChange(
    _i12.ConnectivityResult? result,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#simulateConnectivityChange, [result]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i13.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key])) as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key])) as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key])) as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
          )
          as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]))
          as List<String>?);

  @override
  _i8.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> commit() =>
      (super.noSuchMethod(
            Invocation.method(#commit, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);
}
