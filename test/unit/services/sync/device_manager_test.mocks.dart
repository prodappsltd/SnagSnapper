// Mocks generated by Mockito 5.4.6 from annotations
// in snagsnapper/test/unit/services/sync/device_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;

import 'package:device_info_plus/device_info_plus.dart' as _i16;
import 'package:device_info_plus/src/model/android_device_info.dart' as _i6;
import 'package:device_info_plus/src/model/ios_device_info.dart' as _i7;
import 'package:device_info_plus/src/model/linux_device_info.dart' as _i8;
import 'package:device_info_plus/src/model/macos_device_info.dart' as _i10;
import 'package:device_info_plus/src/model/web_browser_info.dart' as _i9;
import 'package:device_info_plus/src/model/windows_device_info.dart' as _i11;
import 'package:device_info_plus_platform_interface/device_info_plus_platform_interface.dart'
    as _i12;
import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i4;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:firebase_database/firebase_database.dart' as _i3;
import 'package:firebase_database_platform_interface/firebase_database_platform_interface.dart'
    as _i15;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:shared_preferences/src/shared_preferences_legacy.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseReference_1 extends _i1.SmartFake
    implements _i3.DatabaseReference {
  _FakeDatabaseReference_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransactionResult_2 extends _i1.SmartFake
    implements _i3.TransactionResult {
  _FakeTransactionResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOnDisconnect_3 extends _i1.SmartFake implements _i3.OnDisconnect {
  _FakeOnDisconnect_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDataSnapshot_4 extends _i1.SmartFake implements _i3.DataSnapshot {
  _FakeDataSnapshot_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseEvent_5 extends _i1.SmartFake implements _i3.DatabaseEvent {
  _FakeDatabaseEvent_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuery_6 extends _i1.SmartFake implements _i3.Query {
  _FakeQuery_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_7 extends _i1.SmartFake
    implements _i4.ActionCodeInfo {
  _FakeActionCodeInfo_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_8 extends _i1.SmartFake
    implements _i5.UserCredential {
  _FakeUserCredential_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_9 extends _i1.SmartFake
    implements _i5.ConfirmationResult {
  _FakeConfirmationResult_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_10 extends _i1.SmartFake implements _i4.UserMetadata {
  _FakeUserMetadata_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_11 extends _i1.SmartFake implements _i5.MultiFactor {
  _FakeMultiFactor_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_12 extends _i1.SmartFake implements _i4.IdTokenResult {
  _FakeIdTokenResult_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_13 extends _i1.SmartFake implements _i5.User {
  _FakeUser_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAndroidDeviceInfo_14 extends _i1.SmartFake
    implements _i6.AndroidDeviceInfo {
  _FakeAndroidDeviceInfo_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIosDeviceInfo_15 extends _i1.SmartFake implements _i7.IosDeviceInfo {
  _FakeIosDeviceInfo_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLinuxDeviceInfo_16 extends _i1.SmartFake
    implements _i8.LinuxDeviceInfo {
  _FakeLinuxDeviceInfo_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebBrowserInfo_17 extends _i1.SmartFake
    implements _i9.WebBrowserInfo {
  _FakeWebBrowserInfo_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMacOsDeviceInfo_18 extends _i1.SmartFake
    implements _i10.MacOsDeviceInfo {
  _FakeMacOsDeviceInfo_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWindowsDeviceInfo_19 extends _i1.SmartFake
    implements _i11.WindowsDeviceInfo {
  _FakeWindowsDeviceInfo_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseDeviceInfo_20 extends _i1.SmartFake
    implements _i12.BaseDeviceInfo {
  _FakeBaseDeviceInfo_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAndroidBuildVersion_21 extends _i1.SmartFake
    implements _i6.AndroidBuildVersion {
  _FakeAndroidBuildVersion_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIosUtsname_22 extends _i1.SmartFake implements _i7.IosUtsname {
  _FakeIosUtsname_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FirebaseDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseDatabase extends _i1.Mock implements _i3.FirebaseDatabase {
  MockFirebaseDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_0(this, Invocation.getter(#app)),
          )
          as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
    Invocation.setter(#databaseURL, _databaseURL),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  void useDatabaseEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #useDatabaseEmulator,
      [host, port],
      {#automaticHostMapping: automaticHostMapping},
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i3.DatabaseReference ref([String? path]) =>
      (super.noSuchMethod(
            Invocation.method(#ref, [path]),
            returnValue: _FakeDatabaseReference_1(
              this,
              Invocation.method(#ref, [path]),
            ),
          )
          as _i3.DatabaseReference);

  @override
  _i3.DatabaseReference refFromURL(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#refFromURL, [url]),
            returnValue: _FakeDatabaseReference_1(
              this,
              Invocation.method(#refFromURL, [url]),
            ),
          )
          as _i3.DatabaseReference);

  @override
  void setPersistenceEnabled(bool? enabled) => super.noSuchMethod(
    Invocation.method(#setPersistenceEnabled, [enabled]),
    returnValueForMissingStub: null,
  );

  @override
  void setPersistenceCacheSizeBytes(int? cacheSize) => super.noSuchMethod(
    Invocation.method(#setPersistenceCacheSizeBytes, [cacheSize]),
    returnValueForMissingStub: null,
  );

  @override
  void setLoggingEnabled(bool? enabled) => super.noSuchMethod(
    Invocation.method(#setLoggingEnabled, [enabled]),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> goOnline() =>
      (super.noSuchMethod(
            Invocation.method(#goOnline, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> goOffline() =>
      (super.noSuchMethod(
            Invocation.method(#goOffline, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> purgeOutstandingWrites() =>
      (super.noSuchMethod(
            Invocation.method(#purgeOutstandingWrites, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [DatabaseReference].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseReference extends _i1.Mock implements _i3.DatabaseReference {
  MockDatabaseReference() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.DatabaseReference get root =>
      (super.noSuchMethod(
            Invocation.getter(#root),
            returnValue: _FakeDatabaseReference_1(
              this,
              Invocation.getter(#root),
            ),
          )
          as _i3.DatabaseReference);

  @override
  _i3.DatabaseReference get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue: _FakeDatabaseReference_1(
              this,
              Invocation.getter(#ref),
            ),
          )
          as _i3.DatabaseReference);

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  _i13.Stream<_i3.DatabaseEvent> get onChildAdded =>
      (super.noSuchMethod(
            Invocation.getter(#onChildAdded),
            returnValue: _i13.Stream<_i3.DatabaseEvent>.empty(),
          )
          as _i13.Stream<_i3.DatabaseEvent>);

  @override
  _i13.Stream<_i3.DatabaseEvent> get onChildRemoved =>
      (super.noSuchMethod(
            Invocation.getter(#onChildRemoved),
            returnValue: _i13.Stream<_i3.DatabaseEvent>.empty(),
          )
          as _i13.Stream<_i3.DatabaseEvent>);

  @override
  _i13.Stream<_i3.DatabaseEvent> get onChildChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onChildChanged),
            returnValue: _i13.Stream<_i3.DatabaseEvent>.empty(),
          )
          as _i13.Stream<_i3.DatabaseEvent>);

  @override
  _i13.Stream<_i3.DatabaseEvent> get onChildMoved =>
      (super.noSuchMethod(
            Invocation.getter(#onChildMoved),
            returnValue: _i13.Stream<_i3.DatabaseEvent>.empty(),
          )
          as _i13.Stream<_i3.DatabaseEvent>);

  @override
  _i13.Stream<_i3.DatabaseEvent> get onValue =>
      (super.noSuchMethod(
            Invocation.getter(#onValue),
            returnValue: _i13.Stream<_i3.DatabaseEvent>.empty(),
          )
          as _i13.Stream<_i3.DatabaseEvent>);

  @override
  _i3.DatabaseReference child(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#child, [path]),
            returnValue: _FakeDatabaseReference_1(
              this,
              Invocation.method(#child, [path]),
            ),
          )
          as _i3.DatabaseReference);

  @override
  _i3.DatabaseReference push() =>
      (super.noSuchMethod(
            Invocation.method(#push, []),
            returnValue: _FakeDatabaseReference_1(
              this,
              Invocation.method(#push, []),
            ),
          )
          as _i3.DatabaseReference);

  @override
  _i13.Future<void> set(Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#set, [value]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setWithPriority(Object? value, Object? priority) =>
      (super.noSuchMethod(
            Invocation.method(#setWithPriority, [value, priority]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> update(Map<String, Object?>? value) =>
      (super.noSuchMethod(
            Invocation.method(#update, [value]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setPriority(Object? priority) =>
      (super.noSuchMethod(
            Invocation.method(#setPriority, [priority]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> remove() =>
      (super.noSuchMethod(
            Invocation.method(#remove, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i3.TransactionResult> runTransaction(
    _i15.TransactionHandler? transactionHandler, {
    bool? applyLocally = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runTransaction,
              [transactionHandler],
              {#applyLocally: applyLocally},
            ),
            returnValue: _i13.Future<_i3.TransactionResult>.value(
              _FakeTransactionResult_2(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {#applyLocally: applyLocally},
                ),
              ),
            ),
          )
          as _i13.Future<_i3.TransactionResult>);

  @override
  _i3.OnDisconnect onDisconnect() =>
      (super.noSuchMethod(
            Invocation.method(#onDisconnect, []),
            returnValue: _FakeOnDisconnect_3(
              this,
              Invocation.method(#onDisconnect, []),
            ),
          )
          as _i3.OnDisconnect);

  @override
  _i13.Future<_i3.DataSnapshot> get() =>
      (super.noSuchMethod(
            Invocation.method(#get, []),
            returnValue: _i13.Future<_i3.DataSnapshot>.value(
              _FakeDataSnapshot_4(this, Invocation.method(#get, [])),
            ),
          )
          as _i13.Future<_i3.DataSnapshot>);

  @override
  _i13.Future<_i3.DatabaseEvent> once([
    _i15.DatabaseEventType? eventType = _i15.DatabaseEventType.value,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#once, [eventType]),
            returnValue: _i13.Future<_i3.DatabaseEvent>.value(
              _FakeDatabaseEvent_5(this, Invocation.method(#once, [eventType])),
            ),
          )
          as _i13.Future<_i3.DatabaseEvent>);

  @override
  _i3.Query startAt(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#startAt, [value], {#key: key}),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#startAt, [value], {#key: key}),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query startAfter(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#startAfter, [value], {#key: key}),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#startAfter, [value], {#key: key}),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query endAt(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#endAt, [value], {#key: key}),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#endAt, [value], {#key: key}),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query endBefore(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#endBefore, [value], {#key: key}),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#endBefore, [value], {#key: key}),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query equalTo(Object? value, {String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#equalTo, [value], {#key: key}),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#equalTo, [value], {#key: key}),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query limitToFirst(int? limit) =>
      (super.noSuchMethod(
            Invocation.method(#limitToFirst, [limit]),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#limitToFirst, [limit]),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query limitToLast(int? limit) =>
      (super.noSuchMethod(
            Invocation.method(#limitToLast, [limit]),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#limitToLast, [limit]),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query orderByChild(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#orderByChild, [path]),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#orderByChild, [path]),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query orderByKey() =>
      (super.noSuchMethod(
            Invocation.method(#orderByKey, []),
            returnValue: _FakeQuery_6(this, Invocation.method(#orderByKey, [])),
          )
          as _i3.Query);

  @override
  _i3.Query orderByValue() =>
      (super.noSuchMethod(
            Invocation.method(#orderByValue, []),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#orderByValue, []),
            ),
          )
          as _i3.Query);

  @override
  _i3.Query orderByPriority() =>
      (super.noSuchMethod(
            Invocation.method(#orderByPriority, []),
            returnValue: _FakeQuery_6(
              this,
              Invocation.method(#orderByPriority, []),
            ),
          )
          as _i3.Query);

  @override
  _i13.Future<void> keepSynced(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#keepSynced, [value]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [DataSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataSnapshot extends _i1.Mock implements _i3.DataSnapshot {
  MockDataSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.DatabaseReference get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue: _FakeDatabaseReference_1(
              this,
              Invocation.getter(#ref),
            ),
          )
          as _i3.DatabaseReference);

  @override
  bool get exists =>
      (super.noSuchMethod(Invocation.getter(#exists), returnValue: false)
          as bool);

  @override
  Iterable<_i3.DataSnapshot> get children =>
      (super.noSuchMethod(
            Invocation.getter(#children),
            returnValue: <_i3.DataSnapshot>[],
          )
          as Iterable<_i3.DataSnapshot>);

  @override
  bool hasChild(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#hasChild, [path]),
            returnValue: false,
          )
          as bool);

  @override
  _i3.DataSnapshot child(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#child, [path]),
            returnValue: _FakeDataSnapshot_4(
              this,
              Invocation.method(#child, [path]),
            ),
          )
          as _i3.DataSnapshot);
}

/// A class which mocks [DatabaseEvent].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseEvent extends _i1.Mock implements _i3.DatabaseEvent {
  MockDatabaseEvent() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.DatabaseEventType get type =>
      (super.noSuchMethod(
            Invocation.getter(#type),
            returnValue: _i15.DatabaseEventType.childAdded,
          )
          as _i15.DatabaseEventType);

  @override
  _i3.DataSnapshot get snapshot =>
      (super.noSuchMethod(
            Invocation.getter(#snapshot),
            returnValue: _FakeDataSnapshot_4(
              this,
              Invocation.getter(#snapshot),
            ),
          )
          as _i3.DataSnapshot);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i5.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_0(this, Invocation.getter(#app)),
          )
          as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i13.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i4.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i13.Future<_i4.ActionCodeInfo>.value(
              _FakeActionCodeInfo_7(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i13.Future<_i4.ActionCodeInfo>);

  @override
  _i13.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i13.Future<List<String>>.value(<String>[]),
          )
          as _i13.Future<List<String>>);

  @override
  _i13.Future<_i5.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i13.Stream<_i5.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i13.Stream<_i5.User?>.empty(),
          )
          as _i13.Stream<_i5.User?>);

  @override
  _i13.Stream<_i5.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i13.Stream<_i5.User?>.empty(),
          )
          as _i13.Stream<_i5.User?>);

  @override
  _i13.Stream<_i5.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i13.Stream<_i5.User?>.empty(),
          )
          as _i13.Stream<_i5.User?>);

  @override
  _i13.Future<void> sendPasswordResetEmail({
    required String? email,
    _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setPersistence(_i4.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i13.Future<_i5.ConfirmationResult>.value(
              _FakeConfirmationResult_9(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i13.Future<_i5.ConfirmationResult>);

  @override
  _i13.Future<_i5.UserCredential> signInWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<void> signInWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i13.Future<String>.value(
              _i14.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i13.Future<String>);

  @override
  _i13.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i4.PhoneMultiFactorInfo? multiFactorInfo,
    required _i4.PhoneVerificationCompleted? verificationCompleted,
    required _i4.PhoneVerificationFailed? verificationFailed,
    required _i4.PhoneCodeSent? codeSent,
    required _i4.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i4.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> initializeRecaptchaConfig() =>
      (super.noSuchMethod(
            Invocation.method(#initializeRecaptchaConfig, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i5.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i4.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_10(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i4.UserMetadata);

  @override
  List<_i4.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i4.UserInfo>[],
          )
          as List<_i4.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i14.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i5.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_11(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i5.MultiFactor);

  @override
  _i13.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<_i4.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i13.Future<_i4.IdTokenResult>.value(
              _FakeIdTokenResult_12(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i13.Future<_i4.IdTokenResult>);

  @override
  _i13.Future<_i5.UserCredential> linkWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> linkWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> reauthenticateWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> reauthenticateWithPopup(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<void> reauthenticateWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.UserCredential> linkWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<void> linkWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i13.Future<_i5.ConfirmationResult>.value(
              _FakeConfirmationResult_9(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i13.Future<_i5.ConfirmationResult>);

  @override
  _i13.Future<_i5.UserCredential> reauthenticateWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> sendEmailVerification([
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i13.Future<_i5.User>.value(
              _FakeUser_13(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i13.Future<_i5.User>);

  @override
  _i13.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updatePhoneNumber(
    _i4.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [DeviceInfoPlugin].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoPlugin extends _i1.Mock implements _i16.DeviceInfoPlugin {
  MockDeviceInfoPlugin() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<_i6.AndroidDeviceInfo> get androidInfo =>
      (super.noSuchMethod(
            Invocation.getter(#androidInfo),
            returnValue: _i13.Future<_i6.AndroidDeviceInfo>.value(
              _FakeAndroidDeviceInfo_14(this, Invocation.getter(#androidInfo)),
            ),
          )
          as _i13.Future<_i6.AndroidDeviceInfo>);

  @override
  _i13.Future<_i7.IosDeviceInfo> get iosInfo =>
      (super.noSuchMethod(
            Invocation.getter(#iosInfo),
            returnValue: _i13.Future<_i7.IosDeviceInfo>.value(
              _FakeIosDeviceInfo_15(this, Invocation.getter(#iosInfo)),
            ),
          )
          as _i13.Future<_i7.IosDeviceInfo>);

  @override
  _i13.Future<_i8.LinuxDeviceInfo> get linuxInfo =>
      (super.noSuchMethod(
            Invocation.getter(#linuxInfo),
            returnValue: _i13.Future<_i8.LinuxDeviceInfo>.value(
              _FakeLinuxDeviceInfo_16(this, Invocation.getter(#linuxInfo)),
            ),
          )
          as _i13.Future<_i8.LinuxDeviceInfo>);

  @override
  _i13.Future<_i9.WebBrowserInfo> get webBrowserInfo =>
      (super.noSuchMethod(
            Invocation.getter(#webBrowserInfo),
            returnValue: _i13.Future<_i9.WebBrowserInfo>.value(
              _FakeWebBrowserInfo_17(this, Invocation.getter(#webBrowserInfo)),
            ),
          )
          as _i13.Future<_i9.WebBrowserInfo>);

  @override
  _i13.Future<_i10.MacOsDeviceInfo> get macOsInfo =>
      (super.noSuchMethod(
            Invocation.getter(#macOsInfo),
            returnValue: _i13.Future<_i10.MacOsDeviceInfo>.value(
              _FakeMacOsDeviceInfo_18(this, Invocation.getter(#macOsInfo)),
            ),
          )
          as _i13.Future<_i10.MacOsDeviceInfo>);

  @override
  _i13.Future<_i11.WindowsDeviceInfo> get windowsInfo =>
      (super.noSuchMethod(
            Invocation.getter(#windowsInfo),
            returnValue: _i13.Future<_i11.WindowsDeviceInfo>.value(
              _FakeWindowsDeviceInfo_19(this, Invocation.getter(#windowsInfo)),
            ),
          )
          as _i13.Future<_i11.WindowsDeviceInfo>);

  @override
  _i13.Future<_i12.BaseDeviceInfo> get deviceInfo =>
      (super.noSuchMethod(
            Invocation.getter(#deviceInfo),
            returnValue: _i13.Future<_i12.BaseDeviceInfo>.value(
              _FakeBaseDeviceInfo_20(this, Invocation.getter(#deviceInfo)),
            ),
          )
          as _i13.Future<_i12.BaseDeviceInfo>);
}

/// A class which mocks [AndroidDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidDeviceInfo extends _i1.Mock implements _i6.AndroidDeviceInfo {
  MockAndroidDeviceInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.AndroidBuildVersion get version =>
      (super.noSuchMethod(
            Invocation.getter(#version),
            returnValue: _FakeAndroidBuildVersion_21(
              this,
              Invocation.getter(#version),
            ),
          )
          as _i6.AndroidBuildVersion);

  @override
  String get board =>
      (super.noSuchMethod(
            Invocation.getter(#board),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#board),
            ),
          )
          as String);

  @override
  String get bootloader =>
      (super.noSuchMethod(
            Invocation.getter(#bootloader),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#bootloader),
            ),
          )
          as String);

  @override
  String get brand =>
      (super.noSuchMethod(
            Invocation.getter(#brand),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#brand),
            ),
          )
          as String);

  @override
  String get device =>
      (super.noSuchMethod(
            Invocation.getter(#device),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#device),
            ),
          )
          as String);

  @override
  String get display =>
      (super.noSuchMethod(
            Invocation.getter(#display),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#display),
            ),
          )
          as String);

  @override
  String get fingerprint =>
      (super.noSuchMethod(
            Invocation.getter(#fingerprint),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#fingerprint),
            ),
          )
          as String);

  @override
  String get hardware =>
      (super.noSuchMethod(
            Invocation.getter(#hardware),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#hardware),
            ),
          )
          as String);

  @override
  String get host =>
      (super.noSuchMethod(
            Invocation.getter(#host),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#host),
            ),
          )
          as String);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i14.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  String get manufacturer =>
      (super.noSuchMethod(
            Invocation.getter(#manufacturer),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#manufacturer),
            ),
          )
          as String);

  @override
  String get model =>
      (super.noSuchMethod(
            Invocation.getter(#model),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#model),
            ),
          )
          as String);

  @override
  String get product =>
      (super.noSuchMethod(
            Invocation.getter(#product),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#product),
            ),
          )
          as String);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  List<String> get supported32BitAbis =>
      (super.noSuchMethod(
            Invocation.getter(#supported32BitAbis),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  List<String> get supported64BitAbis =>
      (super.noSuchMethod(
            Invocation.getter(#supported64BitAbis),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  List<String> get supportedAbis =>
      (super.noSuchMethod(
            Invocation.getter(#supportedAbis),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  String get tags =>
      (super.noSuchMethod(
            Invocation.getter(#tags),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#tags),
            ),
          )
          as String);

  @override
  String get type =>
      (super.noSuchMethod(
            Invocation.getter(#type),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#type),
            ),
          )
          as String);

  @override
  bool get isPhysicalDevice =>
      (super.noSuchMethod(
            Invocation.getter(#isPhysicalDevice),
            returnValue: false,
          )
          as bool);

  @override
  int get freeDiskSize =>
      (super.noSuchMethod(Invocation.getter(#freeDiskSize), returnValue: 0)
          as int);

  @override
  int get totalDiskSize =>
      (super.noSuchMethod(Invocation.getter(#totalDiskSize), returnValue: 0)
          as int);

  @override
  List<String> get systemFeatures =>
      (super.noSuchMethod(
            Invocation.getter(#systemFeatures),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  String get serialNumber =>
      (super.noSuchMethod(
            Invocation.getter(#serialNumber),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#serialNumber),
            ),
          )
          as String);

  @override
  bool get isLowRamDevice =>
      (super.noSuchMethod(
            Invocation.getter(#isLowRamDevice),
            returnValue: false,
          )
          as bool);

  @override
  int get physicalRamSize =>
      (super.noSuchMethod(Invocation.getter(#physicalRamSize), returnValue: 0)
          as int);

  @override
  int get availableRamSize =>
      (super.noSuchMethod(Invocation.getter(#availableRamSize), returnValue: 0)
          as int);

  @override
  Map<String, dynamic> get data =>
      (super.noSuchMethod(
            Invocation.getter(#data),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [IosDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockIosDeviceInfo extends _i1.Mock implements _i7.IosDeviceInfo {
  MockIosDeviceInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  String get systemName =>
      (super.noSuchMethod(
            Invocation.getter(#systemName),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#systemName),
            ),
          )
          as String);

  @override
  String get systemVersion =>
      (super.noSuchMethod(
            Invocation.getter(#systemVersion),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#systemVersion),
            ),
          )
          as String);

  @override
  String get model =>
      (super.noSuchMethod(
            Invocation.getter(#model),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#model),
            ),
          )
          as String);

  @override
  String get modelName =>
      (super.noSuchMethod(
            Invocation.getter(#modelName),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#modelName),
            ),
          )
          as String);

  @override
  String get localizedModel =>
      (super.noSuchMethod(
            Invocation.getter(#localizedModel),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.getter(#localizedModel),
            ),
          )
          as String);

  @override
  bool get isPhysicalDevice =>
      (super.noSuchMethod(
            Invocation.getter(#isPhysicalDevice),
            returnValue: false,
          )
          as bool);

  @override
  int get physicalRamSize =>
      (super.noSuchMethod(Invocation.getter(#physicalRamSize), returnValue: 0)
          as int);

  @override
  int get availableRamSize =>
      (super.noSuchMethod(Invocation.getter(#availableRamSize), returnValue: 0)
          as int);

  @override
  bool get isiOSAppOnMac =>
      (super.noSuchMethod(Invocation.getter(#isiOSAppOnMac), returnValue: false)
          as bool);

  @override
  _i7.IosUtsname get utsname =>
      (super.noSuchMethod(
            Invocation.getter(#utsname),
            returnValue: _FakeIosUtsname_22(this, Invocation.getter(#utsname)),
          )
          as _i7.IosUtsname);

  @override
  int get freeDiskSize =>
      (super.noSuchMethod(Invocation.getter(#freeDiskSize), returnValue: 0)
          as int);

  @override
  int get totalDiskSize =>
      (super.noSuchMethod(Invocation.getter(#totalDiskSize), returnValue: 0)
          as int);

  @override
  Map<String, dynamic> get data =>
      (super.noSuchMethod(
            Invocation.getter(#data),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i17.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key])) as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key])) as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key])) as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
          )
          as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]))
          as List<String>?);

  @override
  _i13.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> commit() =>
      (super.noSuchMethod(
            Invocation.method(#commit, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}
