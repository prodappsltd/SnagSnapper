// Mocks generated by Mockito 5.4.6 from annotations
// in snagsnapper/test/main_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i2;

import 'package:firebase_app_check/firebase_app_check.dart' as _i15;
import 'package:firebase_app_check_platform_interface/firebase_app_check_platform_interface.dart'
    as _i16;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:firebase_core/firebase_core.dart' as _i3;
import 'package:firebase_crashlytics/firebase_crashlytics.dart' as _i13;
import 'package:flutter/foundation.dart' as _i14;
import 'package:image_picker/image_picker.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:snagsnapper/Data/colleague.dart' as _i10;
import 'package:snagsnapper/Data/contentProvider.dart' as _i5;
import 'package:snagsnapper/Data/site.dart' as _i8;
import 'package:snagsnapper/Data/snag.dart' as _i9;
import 'package:snagsnapper/Data/user.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeColor_0 extends _i1.SmartFake implements _i2.Color {
  _FakeColor_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_1 extends _i1.SmartFake implements _i3.FirebaseApp {
  _FakeFirebaseApp_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_2 extends _i1.SmartFake
    implements _i4.ActionCodeInfo {
  _FakeActionCodeInfo_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_3 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_4 extends _i1.SmartFake
    implements _i4.ConfirmationResult {
  _FakeConfirmationResult_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_5 extends _i1.SmartFake implements _i4.UserMetadata {
  _FakeUserMetadata_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_6 extends _i1.SmartFake implements _i4.MultiFactor {
  _FakeMultiFactor_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_7 extends _i1.SmartFake implements _i4.IdTokenResult {
  _FakeIdTokenResult_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_8 extends _i1.SmartFake implements _i4.User {
  _FakeUser_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CP].
///
/// See the documentation for Mockito's code generation for more information.
class MockCP extends _i1.Mock implements _i5.CP {
  MockCP() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get greenCondition =>
      (super.noSuchMethod(Invocation.getter(#greenCondition), returnValue: 0)
          as int);

  @override
  int get orangeCondition =>
      (super.noSuchMethod(Invocation.getter(#orangeCondition), returnValue: 0)
          as int);

  @override
  int get redCondition =>
      (super.noSuchMethod(Invocation.getter(#redCondition), returnValue: 0)
          as int);

  @override
  bool get hasInternet =>
      (super.noSuchMethod(Invocation.getter(#hasInternet), returnValue: false)
          as bool);

  @override
  _i2.Color get seedColour =>
      (super.noSuchMethod(
            Invocation.getter(#seedColour),
            returnValue: _FakeColor_0(this, Invocation.getter(#seedColour)),
          )
          as _i2.Color);

  @override
  _i2.Brightness get brightness =>
      (super.noSuchMethod(
            Invocation.getter(#brightness),
            returnValue: _i2.Brightness.dark,
          )
          as _i2.Brightness);

  @override
  String get themeType =>
      (super.noSuchMethod(
            Invocation.getter(#themeType),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#themeType),
            ),
          )
          as String);

  @override
  set greenCondition(int? _greenCondition) => super.noSuchMethod(
    Invocation.setter(#greenCondition, _greenCondition),
    returnValueForMissingStub: null,
  );

  @override
  set orangeCondition(int? _orangeCondition) => super.noSuchMethod(
    Invocation.setter(#orangeCondition, _orangeCondition),
    returnValueForMissingStub: null,
  );

  @override
  set redCondition(int? _redCondition) => super.noSuchMethod(
    Invocation.setter(#redCondition, _redCondition),
    returnValueForMissingStub: null,
  );

  @override
  set hasInternet(bool? _hasInternet) => super.noSuchMethod(
    Invocation.setter(#hasInternet, _hasInternet),
    returnValueForMissingStub: null,
  );

  @override
  set seedColour(_i2.Color? _seedColour) => super.noSuchMethod(
    Invocation.setter(#seedColour, _seedColour),
    returnValueForMissingStub: null,
  );

  @override
  set brightness(_i2.Brightness? _brightness) => super.noSuchMethod(
    Invocation.setter(#brightness, _brightness),
    returnValueForMissingStub: null,
  );

  @override
  set themeType(String? _themeType) => super.noSuchMethod(
    Invocation.setter(#themeType, _themeType),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  dynamic changeBrightness(_i2.Brightness? b) =>
      super.noSuchMethod(Invocation.method(#changeBrightness, [b]));

  @override
  dynamic changeSeed(_i2.Color? c) =>
      super.noSuchMethod(Invocation.method(#changeSeed, [c]));

  @override
  dynamic changeThemeType(String? type) =>
      super.noSuchMethod(Invocation.method(#changeThemeType, [type]));

  @override
  dynamic setPro(bool? proValue) =>
      super.noSuchMethod(Invocation.method(#setPro, [proValue]));

  @override
  dynamic setProSiteSharing(bool? proValue) =>
      super.noSuchMethod(Invocation.method(#setProSiteSharing, [proValue]));

  @override
  void setPDFColor(_i2.Color? color) => super.noSuchMethod(
    Invocation.method(#setPDFColor, [color]),
    returnValueForMissingStub: null,
  );

  @override
  _i2.Color getPDFColor() =>
      (super.noSuchMethod(
            Invocation.method(#getPDFColor, []),
            returnValue: _FakeColor_0(
              this,
              Invocation.method(#getPDFColor, []),
            ),
          )
          as _i2.Color);

  @override
  bool isOwner(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#isOwner, [email]),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Future<bool> storeSharedSite(String? UID, String? siteID) =>
      (super.noSuchMethod(
            Invocation.method(#storeSharedSite, [UID, siteID]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> downloadSite(String? ownerUID, String? siteID) =>
      (super.noSuchMethod(
            Invocation.method(#downloadSite, [ownerUID, siteID]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<dynamic> loadOnlySharedSites() =>
      (super.noSuchMethod(
            Invocation.method(#loadOnlySharedSites, []),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  _i7.Future<bool> updateProfile(
    String? _name,
    String? _jobTitle,
    String? _companyName,
    String? _postCode,
    String? _phone,
    String? _email,
    String? _dateFormat,
    String? _signature,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [
              _name,
              _jobTitle,
              _companyName,
              _postCode,
              _phone,
              _email,
              _dateFormat,
              _signature,
            ]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  void changeDateFormat(bool? british) => super.noSuchMethod(
    Invocation.method(#changeDateFormat, [british]),
    returnValueForMissingStub: null,
  );

  @override
  void resetVariables() => super.noSuchMethod(
    Invocation.method(#resetVariables, []),
    returnValueForMissingStub: null,
  );

  @override
  String getDateFormat() =>
      (super.noSuchMethod(
            Invocation.method(#getDateFormat, []),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.method(#getDateFormat, []),
            ),
          )
          as String);

  @override
  _i7.Future<bool> addSite(_i8.Site? site) =>
      (super.noSuchMethod(
            Invocation.method(#addSite, [site]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<dynamic> updateSite(_i8.Site? site) =>
      (super.noSuchMethod(
            Invocation.method(#updateSite, [site]),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> loadOwnedSites() =>
      (super.noSuchMethod(
            Invocation.method(#loadOwnedSites, []),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> updateSnag(_i9.Snag? snag) =>
      (super.noSuchMethod(
            Invocation.method(#updateSnag, [snag]),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> addSnag(_i9.Snag? snag) =>
      (super.noSuchMethod(
            Invocation.method(#addSnag, [snag]),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  dynamic addToLocalSnags(_i9.Snag? snag) =>
      super.noSuchMethod(Invocation.method(#addToLocalSnags, [snag]));

  @override
  void removeFromLocalSnags(_i9.Snag? snag) => super.noSuchMethod(
    Invocation.method(#removeFromLocalSnags, [snag]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<dynamic> deleteSnag(_i9.Snag? snag) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSnag, [snag]),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> deleteSite(_i8.Site? site) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSite, [site]),
            returnValue: _i7.Future<dynamic>.value(),
          )
          as _i7.Future<dynamic>);

  @override
  dynamic getSite(String? siteID) =>
      super.noSuchMethod(Invocation.method(#getSite, [siteID]));

  @override
  Map<String, _i8.Site> getMapOfOwnedSites() =>
      (super.noSuchMethod(
            Invocation.method(#getMapOfOwnedSites, []),
            returnValue: <String, _i8.Site>{},
          )
          as Map<String, _i8.Site>);

  @override
  dynamic getListOfSnags(String? siteUID) =>
      super.noSuchMethod(Invocation.method(#getListOfSnags, [siteUID]));

  @override
  List<_i10.Colleague> getListOFColleagues() =>
      (super.noSuchMethod(
            Invocation.method(#getListOFColleagues, []),
            returnValue: <_i10.Colleague>[],
          )
          as List<_i10.Colleague>);

  @override
  _i7.Future<bool> addColleague(_i10.Colleague? colleague2BAdded) =>
      (super.noSuchMethod(
            Invocation.method(#addColleague, [colleague2BAdded]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> updateColleague(_i10.Colleague? person) =>
      (super.noSuchMethod(
            Invocation.method(#updateColleague, [person]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> updateProfileImage() =>
      (super.noSuchMethod(
            Invocation.method(#updateProfileImage, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> removeColleague(_i10.Colleague? colleague) =>
      (super.noSuchMethod(
            Invocation.method(#removeColleague, [colleague]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  void setAppUser(_i11.AppUser? user) => super.noSuchMethod(
    Invocation.method(#setAppUser, [user]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<bool> loadAppUserProfile() =>
      (super.noSuchMethod(
            Invocation.method(#loadAppUserProfile, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<String?> saveNewPicture(
    _i12.XFile? picture, {
    required String? siteID,
    required String? snagID,
    required bool? storeExternally,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #saveNewPicture,
              [picture],
              {
                #siteID: siteID,
                #snagID: snagID,
                #storeExternally: storeExternally,
              },
            ),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  void addListener(_i2.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i2.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i4.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_1(this, Invocation.getter(#app)),
          )
          as _i3.FirebaseApp);

  @override
  set app(_i3.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i7.Future<_i4.ActionCodeInfo>.value(
              _FakeActionCodeInfo_2(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i7.Future<_i4.ActionCodeInfo>);

  @override
  _i7.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i7.Future<List<String>>.value(<String>[]),
          )
          as _i7.Future<List<String>>);

  @override
  _i7.Future<_i4.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Stream<_i4.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i7.Stream<_i4.User?>.empty(),
          )
          as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i7.Stream<_i4.User?>.empty(),
          )
          as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i7.Stream<_i4.User?>.empty(),
          )
          as _i7.Stream<_i4.User?>);

  @override
  _i7.Future<void> sendPasswordResetEmail({
    required String? email,
    _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setPersistence(_i4.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i7.Future<_i4.ConfirmationResult>.value(
              _FakeConfirmationResult_4(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i7.Future<_i4.ConfirmationResult>);

  @override
  _i7.Future<_i4.UserCredential> signInWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> signInWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i7.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  _i7.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i4.PhoneMultiFactorInfo? multiFactorInfo,
    required _i4.PhoneVerificationCompleted? verificationCompleted,
    required _i4.PhoneVerificationFailed? verificationFailed,
    required _i4.PhoneCodeSent? codeSent,
    required _i4.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i4.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> initializeRecaptchaConfig() =>
      (super.noSuchMethod(
            Invocation.method(#initializeRecaptchaConfig, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [FirebaseCrashlytics].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseCrashlytics extends _i1.Mock
    implements _i13.FirebaseCrashlytics {
  MockFirebaseCrashlytics() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_1(this, Invocation.getter(#app)),
          )
          as _i3.FirebaseApp);

  @override
  bool get isCrashlyticsCollectionEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isCrashlyticsCollectionEnabled),
            returnValue: false,
          )
          as bool);

  @override
  set app(_i3.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i7.Future<bool> checkForUnsentReports() =>
      (super.noSuchMethod(
            Invocation.method(#checkForUnsentReports, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  void crash() => super.noSuchMethod(
    Invocation.method(#crash, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> deleteUnsentReports() =>
      (super.noSuchMethod(
            Invocation.method(#deleteUnsentReports, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<bool> didCrashOnPreviousExecution() =>
      (super.noSuchMethod(
            Invocation.method(#didCrashOnPreviousExecution, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> recordError(
    dynamic exception,
    StackTrace? stack, {
    dynamic reason,
    Iterable<Object>? information = const [],
    bool? printDetails,
    bool? fatal = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #recordError,
              [exception, stack],
              {
                #reason: reason,
                #information: information,
                #printDetails: printDetails,
                #fatal: fatal,
              },
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> recordFlutterError(
    _i14.FlutterErrorDetails? flutterErrorDetails, {
    bool? fatal = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #recordFlutterError,
              [flutterErrorDetails],
              {#fatal: fatal},
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> recordFlutterFatalError(
    _i14.FlutterErrorDetails? flutterErrorDetails,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#recordFlutterFatalError, [flutterErrorDetails]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> log(String? message) =>
      (super.noSuchMethod(
            Invocation.method(#log, [message]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> sendUnsentReports() =>
      (super.noSuchMethod(
            Invocation.method(#sendUnsentReports, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setCrashlyticsCollectionEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setCrashlyticsCollectionEnabled, [enabled]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setUserIdentifier(String? identifier) =>
      (super.noSuchMethod(
            Invocation.method(#setUserIdentifier, [identifier]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setCustomKey(String? key, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#setCustomKey, [key, value]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [FirebaseAppCheck].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAppCheck extends _i1.Mock implements _i15.FirebaseAppCheck {
  MockFirebaseAppCheck() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_1(this, Invocation.getter(#app)),
          )
          as _i3.FirebaseApp);

  @override
  _i7.Stream<String?> get onTokenChange =>
      (super.noSuchMethod(
            Invocation.getter(#onTokenChange),
            returnValue: _i7.Stream<String?>.empty(),
          )
          as _i7.Stream<String?>);

  @override
  set app(_i3.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> activate({
    _i16.WebProvider? webProvider,
    _i16.AndroidProvider? androidProvider = _i16.AndroidProvider.playIntegrity,
    _i16.AppleProvider? appleProvider = _i16.AppleProvider.deviceCheck,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#activate, [], {
              #webProvider: webProvider,
              #androidProvider: androidProvider,
              #appleProvider: appleProvider,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> getToken([bool? forceRefresh]) =>
      (super.noSuchMethod(
            Invocation.method(#getToken, [forceRefresh]),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<void> setTokenAutoRefreshEnabled(
    bool? isTokenAutoRefreshEnabled,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setTokenAutoRefreshEnabled, [
              isTokenAutoRefreshEnabled,
            ]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String> getLimitedUseToken() =>
      (super.noSuchMethod(
            Invocation.method(#getLimitedUseToken, []),
            returnValue: _i7.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#getLimitedUseToken, []),
              ),
            ),
          )
          as _i7.Future<String>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i4.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i4.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_5(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i4.UserMetadata);

  @override
  List<_i4.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i4.UserInfo>[],
          )
          as List<_i4.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i6.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i4.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_6(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i4.MultiFactor);

  @override
  _i7.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<_i4.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i7.Future<_i4.IdTokenResult>.value(
              _FakeIdTokenResult_7(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i7.Future<_i4.IdTokenResult>);

  @override
  _i7.Future<_i4.UserCredential> linkWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> linkWithProvider(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithPopup(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> reauthenticateWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> linkWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> linkWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i7.Future<_i4.ConfirmationResult>.value(
              _FakeConfirmationResult_4(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i7.Future<_i4.ConfirmationResult>);

  @override
  _i7.Future<_i4.UserCredential> reauthenticateWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i7.Future<_i4.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> sendEmailVerification([
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i7.Future<_i4.User>.value(
              _FakeUser_8(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i7.Future<_i4.User>);

  @override
  _i7.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePhoneNumber(
    _i4.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}
