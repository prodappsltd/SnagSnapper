// Mocks generated by Mockito 5.4.6 from annotations
// in snagsnapper/test/widget/google_signin_flow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i2;

import 'package:image_picker/image_picker.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:snagsnapper/Data/colleague.dart' as _i8;
import 'package:snagsnapper/Data/contentProvider.dart' as _i3;
import 'package:snagsnapper/Data/site.dart' as _i6;
import 'package:snagsnapper/Data/snag.dart' as _i7;
import 'package:snagsnapper/Data/user.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeColor_0 extends _i1.SmartFake implements _i2.Color {
  _FakeColor_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CP].
///
/// See the documentation for Mockito's code generation for more information.
class MockCP extends _i1.Mock implements _i3.CP {
  MockCP() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get greenCondition =>
      (super.noSuchMethod(Invocation.getter(#greenCondition), returnValue: 0)
          as int);

  @override
  int get orangeCondition =>
      (super.noSuchMethod(Invocation.getter(#orangeCondition), returnValue: 0)
          as int);

  @override
  int get redCondition =>
      (super.noSuchMethod(Invocation.getter(#redCondition), returnValue: 0)
          as int);

  @override
  bool get hasInternet =>
      (super.noSuchMethod(Invocation.getter(#hasInternet), returnValue: false)
          as bool);

  @override
  _i2.Color get seedColour =>
      (super.noSuchMethod(
            Invocation.getter(#seedColour),
            returnValue: _FakeColor_0(this, Invocation.getter(#seedColour)),
          )
          as _i2.Color);

  @override
  _i2.Brightness get brightness =>
      (super.noSuchMethod(
            Invocation.getter(#brightness),
            returnValue: _i2.Brightness.dark,
          )
          as _i2.Brightness);

  @override
  String get themeType =>
      (super.noSuchMethod(
            Invocation.getter(#themeType),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#themeType),
            ),
          )
          as String);

  @override
  set greenCondition(int? _greenCondition) => super.noSuchMethod(
    Invocation.setter(#greenCondition, _greenCondition),
    returnValueForMissingStub: null,
  );

  @override
  set orangeCondition(int? _orangeCondition) => super.noSuchMethod(
    Invocation.setter(#orangeCondition, _orangeCondition),
    returnValueForMissingStub: null,
  );

  @override
  set redCondition(int? _redCondition) => super.noSuchMethod(
    Invocation.setter(#redCondition, _redCondition),
    returnValueForMissingStub: null,
  );

  @override
  set hasInternet(bool? _hasInternet) => super.noSuchMethod(
    Invocation.setter(#hasInternet, _hasInternet),
    returnValueForMissingStub: null,
  );

  @override
  set seedColour(_i2.Color? _seedColour) => super.noSuchMethod(
    Invocation.setter(#seedColour, _seedColour),
    returnValueForMissingStub: null,
  );

  @override
  set brightness(_i2.Brightness? _brightness) => super.noSuchMethod(
    Invocation.setter(#brightness, _brightness),
    returnValueForMissingStub: null,
  );

  @override
  set themeType(String? _themeType) => super.noSuchMethod(
    Invocation.setter(#themeType, _themeType),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  dynamic changeBrightness(_i2.Brightness? b) =>
      super.noSuchMethod(Invocation.method(#changeBrightness, [b]));

  @override
  dynamic changeSeed(_i2.Color? c) =>
      super.noSuchMethod(Invocation.method(#changeSeed, [c]));

  @override
  dynamic changeThemeType(String? type) =>
      super.noSuchMethod(Invocation.method(#changeThemeType, [type]));

  @override
  dynamic setPro(bool? proValue) =>
      super.noSuchMethod(Invocation.method(#setPro, [proValue]));

  @override
  dynamic setProSiteSharing(bool? proValue) =>
      super.noSuchMethod(Invocation.method(#setProSiteSharing, [proValue]));

  @override
  void setPDFColor(_i2.Color? color) => super.noSuchMethod(
    Invocation.method(#setPDFColor, [color]),
    returnValueForMissingStub: null,
  );

  @override
  _i2.Color getPDFColor() =>
      (super.noSuchMethod(
            Invocation.method(#getPDFColor, []),
            returnValue: _FakeColor_0(
              this,
              Invocation.method(#getPDFColor, []),
            ),
          )
          as _i2.Color);

  @override
  bool isOwner(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#isOwner, [email]),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<bool> storeSharedSite(String? UID, String? siteID) =>
      (super.noSuchMethod(
            Invocation.method(#storeSharedSite, [UID, siteID]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> downloadSite(String? ownerUID, String? siteID) =>
      (super.noSuchMethod(
            Invocation.method(#downloadSite, [ownerUID, siteID]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<dynamic> loadOnlySharedSites() =>
      (super.noSuchMethod(
            Invocation.method(#loadOnlySharedSites, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<bool> updateProfile(
    String? _name,
    String? _jobTitle,
    String? _companyName,
    String? _postCode,
    String? _phone,
    String? _email,
    String? _dateFormat,
    String? _signature,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [
              _name,
              _jobTitle,
              _companyName,
              _postCode,
              _phone,
              _email,
              _dateFormat,
              _signature,
            ]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void changeDateFormat(bool? british) => super.noSuchMethod(
    Invocation.method(#changeDateFormat, [british]),
    returnValueForMissingStub: null,
  );

  @override
  void resetVariables() => super.noSuchMethod(
    Invocation.method(#resetVariables, []),
    returnValueForMissingStub: null,
  );

  @override
  String getDateFormat() =>
      (super.noSuchMethod(
            Invocation.method(#getDateFormat, []),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getDateFormat, []),
            ),
          )
          as String);

  @override
  _i5.Future<bool> addSite(_i6.Site? site) =>
      (super.noSuchMethod(
            Invocation.method(#addSite, [site]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<dynamic> updateSite(_i6.Site? site) =>
      (super.noSuchMethod(
            Invocation.method(#updateSite, [site]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> loadOwnedSites() =>
      (super.noSuchMethod(
            Invocation.method(#loadOwnedSites, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> updateSnag(_i7.Snag? snag) =>
      (super.noSuchMethod(
            Invocation.method(#updateSnag, [snag]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> addSnag(_i7.Snag? snag) =>
      (super.noSuchMethod(
            Invocation.method(#addSnag, [snag]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  dynamic addToLocalSnags(_i7.Snag? snag) =>
      super.noSuchMethod(Invocation.method(#addToLocalSnags, [snag]));

  @override
  void removeFromLocalSnags(_i7.Snag? snag) => super.noSuchMethod(
    Invocation.method(#removeFromLocalSnags, [snag]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<dynamic> deleteSnag(_i7.Snag? snag) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSnag, [snag]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> deleteSite(_i6.Site? site) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSite, [site]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  dynamic getSite(String? siteID) =>
      super.noSuchMethod(Invocation.method(#getSite, [siteID]));

  @override
  Map<String, _i6.Site> getMapOfOwnedSites() =>
      (super.noSuchMethod(
            Invocation.method(#getMapOfOwnedSites, []),
            returnValue: <String, _i6.Site>{},
          )
          as Map<String, _i6.Site>);

  @override
  dynamic getListOfSnags(String? siteUID) =>
      super.noSuchMethod(Invocation.method(#getListOfSnags, [siteUID]));

  @override
  List<_i8.Colleague> getListOFColleagues() =>
      (super.noSuchMethod(
            Invocation.method(#getListOFColleagues, []),
            returnValue: <_i8.Colleague>[],
          )
          as List<_i8.Colleague>);

  @override
  _i5.Future<bool> addColleague(_i8.Colleague? colleague2BAdded) =>
      (super.noSuchMethod(
            Invocation.method(#addColleague, [colleague2BAdded]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> updateColleague(_i8.Colleague? person) =>
      (super.noSuchMethod(
            Invocation.method(#updateColleague, [person]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> updateProfileImage() =>
      (super.noSuchMethod(
            Invocation.method(#updateProfileImage, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> removeColleague(_i8.Colleague? colleague) =>
      (super.noSuchMethod(
            Invocation.method(#removeColleague, [colleague]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void setAppUser(_i9.AppUser? user) => super.noSuchMethod(
    Invocation.method(#setAppUser, [user]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<bool> loadAppUserProfile() =>
      (super.noSuchMethod(
            Invocation.method(#loadAppUserProfile, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<String?> saveNewPicture(
    _i10.XFile? picture, {
    required String? siteID,
    required String? snagID,
    required bool? storeExternally,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #saveNewPicture,
              [picture],
              {
                #siteID: siteID,
                #snagID: snagID,
                #storeExternally: storeExternally,
              },
            ),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  void addListener(_i2.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i2.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
